menuconfig SUPPORT_DIY
	bool "DIY BiscuitOS/Broiler Hardware"

if SUPPORT_DIY

config DIY_MEMORY
	int "Memory Size(MiB)"
	default "512"

config DIY_MEMORY_SLOTS
	int "Memory Slots"
	default 0

config DIY_MEMORY_MAX
	int "Memory MAX Size(Gig)"
	default 8

config DIY_ROOTFS_SIZE
	int "Rootfs Size(MiB)"
	default "300"

config DIY_CPU_NUMBER
	int "CPU Number"
	default 2

config DIY_CMDLINE
	string "CMDLINE on Kernel"

config DIY_DEMSG_LOGLEVEL
	int "Demsg Loglevel(0-8)"
	default "8"

config DIY_NUMA
	bool "Support NUMA Topology"
        select PK_NUMA
	default N

config DIY_CPU_SOCKET
	int "CPU Socket Number(Default None)"
	default 0

config DIY_CPU_I440FX
	bool "Intel i440FX"

config DIY_CPU_Q35
	bool "Intel Q35"

if DIY_CPU_Q35

config DIY_VIOMMU
	bool "vIOMMU"
	default N

endif

config PK_BISCUITOS_CPU_HOST
	select PK_KVM
	bool "Support Host CPU Feature Passthrough"

config PK_BISCUITOS_HARDWARE
        select PK_KVM
        select PK_BROILER
        bool "Support BiscuitOS Hardware Emulate"

config HW_AUTO_PK
	bool

config HW_PCI_BAR
	select HW_AUTO_PK
	select PK_PCI
	select PK_PCI_QEMU_DEV_BAR
	select PK_BROILER_PCI_DD
	bool "BiscuitOS PCI/PCIe IO-BAR and MMIO-BAR"

config HW_PCI_INTX
	select HW_AUTO_PK
	select PK_PCI
	select PK_PCI_QEMU_DEV_INTX
	select PK_BROILER_PCI_INTX
	bool "BiscuitOS PCI/PCIe with INTX Interrupt"

config HW_PCI_MSI
	select HW_AUTO_PK
	select PK_PCI
	select PK_PCI_QEMU_DEV_MSI
	select PK_BROILER_PCI_MSI
	bool "BiscuitOS PCI/PCIe with MSI Interrupt"

config HW_PCI_MSIX
	select HW_AUTO_PK
	select PK_PCI
	select PK_PCI_QEMU_DEV_MSIX
	select PK_BROILER_PCI_MSIX
	bool "BiscuitOS PCI/PCIe with MSIX Interrupt"

config HW_PCI_DMA_INTX
	select HW_AUTO_PK
	select PK_PCI
	select PK_BROILER_DMA_INTX
	select PK_PCI_DMA_QEMU_DEV_INTX
	bool "BiscuitOS PCI/PCIe DMA with INTX Interrupt"

config HW_PCI_DMA_MSI
	select HW_AUTO_PK
	select PK_PCI
	select PK_BROILER_DMA_MSI
	select PK_PCI_DMA_QEMU_DEV_MSI
	bool "BiscuitOS PCI/PCIe DMA with MSI Interrupt"

config HW_PCI_DMA_MSIX
	select HW_AUTO_PK
	select PK_PCI
	select PK_BROILER_DMA_MSIX
	select PK_PCI_DMA_QEMU_DEV_MSIX
	bool "BiscuitOS PCI/PCIe DMA with MSIX Interrupt"

config HW_DMA_BUF
	select HW_AUTO_PK
	select PK_PCI
	select PK_DMA
	select PK_DMA_DMABUF_QEMU_DEVICE
	select PK_PCI_DMABUF_QEMU_DEV
	bool "BiscuitOS PCI/PCIe DMA-BUF"

config HW_CXL_GPU
	select HW_AUTO_PK
	select PK_PCI
	select PK_DMA
	bool "CXL SHMEM GPU Device"

config HW_CXL
	select DIY_CPU_Q35
	select QEMU_CXL
	bool "CXL: Compute Express Link"

if HW_CXL

choice

	prompt "CXL Hardware Topology"

config HW_CXL_TPG_TYPE0
	bool "CXL DirectEP: x1 Type3 PMEM"

config HW_CXL_TPG_TYPE1
	bool "CXL DirectEP: x1 Type3 DDR"

config HW_CXL_TPG_TYPE2
	bool "CXL2.0: x1 VCS + x1 Type3 PMEM"

config HW_CXL_TPG_TYPE3
	bool "CXL2.0: x1 VCS + x1 Type DDR"

config HW_CXL_TPG_TYPE4
	bool "CXL2.0: x1 VCS + x4 Type3 DDR"

config HW_CXL_TPG_TYPE5
	bool "CXL2.0: x1 VCS + x4 Type3 PMEM"

config HW_CXL_TPG_TYPE6
	bool "CXL2.0: x2 VCS + x4 Type3 DDR(PerVCS)"

config HW_CXL_TPG_TYPE7
	bool "CXL2.0: x2 Host(VH) + SLD"

config HW_CXL_TPG_TYPE8
	bool "CXL2.0: x2 Host(VH) + MLD"

config HW_CXL_TPG_TYPE9
	bool "CXL2.0: x2 Host(VH) + MH-SLD"

config HW_CXL_TPG_TYPEA
	bool "CXL2.0: x2 Host(VH) + MH-MLD"

endchoice

config HW_CXL_TPG_NR
	int
	default 0 if HW_CXL_TPG_TYPE0
	default 1 if HW_CXL_TPG_TYPE1
	default 2 if HW_CXL_TPG_TYPE2
	default 3 if HW_CXL_TPG_TYPE3
	default 4 if HW_CXL_TPG_TYPE4
	default 5 if HW_CXL_TPG_TYPE5
	default 6 if HW_CXL_TPG_TYPE6
	default 7 if HW_CXL_TPG_TYPE7
	default 8 if HW_CXL_TPG_TYPE8
	default 9 if HW_CXL_TPG_TYPE9
	default 10 if HW_CXL_TPG_TYPEA
	default 100

endif # CXL TOPOLOGY

##
# NUMA DIY
config HW_NUMA
	bool "NUMA(Non-uniform Memory Access)"

if HW_NUMA

choice
	prompt "NUMA Hardware Topology"

config HW_NUMA_TPG_TYPE0
	bool "UMA(Uniform Memory Access) with FSB(Pentium 4)"

config HW_NUMA_TPG_TYPE1
	select DIY_CPU_Q35
	bool "x2 Socket NUMA NODE with QPI(Xeon E5-2600 LCC)"

config HW_NUMA_TPG_TYPE2
	select DIY_CPU_Q35
	bool "x2 Socket NUMA NODE with RingBus(Xeon E5-2600 HCC)"

config HW_NUMA_TPG_TYPE3
	select DIY_CPU_Q35
	bool "x2 SNC NUMA NODE with Mesh(Xeon Skylake-SP)"

config HW_NUMA_TPG_TYPE4
	select DIY_CPU_Q35
	bool "x2 SNC + x2 Socket NUMA NODE with UPI(Xeon Skylake-SP)"

config HW_NUMA_TPG_TYPE5
	select DIY_CPU_Q35
	bool "x2 Socket NUMA with PCIe"

config HW_NUMA_TPG_TYPE6
	select DIY_CPU_Q35
	bool "x2 SNC with CPUless NUMA NODE"

endchoice

config HW_NUMA_TPG_NR
	int
	default 0 if HW_NUMA_TPG_TYPE0
	default 1 if HW_NUMA_TPG_TYPE1
	default 2 if HW_NUMA_TPG_TYPE2
	default 3 if HW_NUMA_TPG_TYPE3
	default 4 if HW_NUMA_TPG_TYPE4
	default 5 if HW_NUMA_TPG_TYPE5
	default 6 if HW_NUMA_TPG_TYPE6
	default 100

endif # HW_NUMA

config HW_NUMA_HMAT
	bool "HMAT NUMA Latency AND Bandwidth"

## END NUMA

## PMEM
config HW_PMEM
	select DIY_CPU_Q35
	bool "PMEM: Persistent Memory(NVDIMMs)"

config VIRTIO_BLK_MINIX
	bool "Virtio-BLK: MINIX Filesystem Disk"

config VIRTIO_BLK_EXT4
	bool "Virtio-BLK: EXT4 Filesystem Disk"

config VIRTIO_BLK_EXT3
	bool "Virtio-BLK: EXT3 Filesystem Disk"

config VIRTIO_BLK_EXT2
	bool "Virtio-BLK: EXT2 Filesystem Disk"

config VIRTIO_BLK_VFAT
	bool "Virtio-BLK: VFAT Filesystem Disk"

config VIRTIO_BLK_MSDOS
	bool "Virtio-BLK: MSDOS Filesystem Disk"

config VIRTIO_BLK_FAT
	bool "Virtio-BLK: FAT Filesystem Disk"

config VIRTIO_BLK_CRAMFS
	bool "Virtio-BLK: CRAMFS Filesystem Disk"

config VIRTIO_BLK_BFS
	bool "Virtio-BLK: BFS Filesystem Disk"

config VIRTIO_BLK_JFFS2
	bool "Virtio-BLK: JFFS2 Filesystem Disk"

config VIRTIO_BLK_UBIFS
	bool "Virtio-BLK: UBIFS Filesystem Disk"

config VIRTIO_BLK_SQUASHFS
	bool "Virtio-BLK: SQUASHFS Filesystem Disk"

config VIRTIO_BLK_BTRFS
	bool "Virtio-BLK: BTRFS Filesystem Disk"

config VIRTIO_BLK_REISERFS
	bool "Virtio-BLK: REISERFS Filesystem Disk"

config VIRTIO_BLK_JFS
	bool "Virtio-BLK: JFS Filesystem Disk"

config VIRTIO_BLK_XFS
	bool "Virtio-BLK: XFS Filesystem Disk"

config VIRTIO_BLK_GFS2
	bool "Virtio-BLK: GFS2 Filesystem Disk"

config VIRTIO_BLK_F2FS
	bool "Virtio-BLK: F2FS Filesystem Disk"

config PSEUDO_TMPFS
	bool "Pseudo Filesystem: TMPFS"

config PSEUDO_HUGE_TMPFS
	bool "Pseudo Filesystem: Huge TMPFS"

config DIY_SWAP
	bool "Support SWAP Space on RAM"

config DIY_ZSWAP
	bool "Support ZSWAP Space"

endif # SUPPORT_BOARD_INDV
